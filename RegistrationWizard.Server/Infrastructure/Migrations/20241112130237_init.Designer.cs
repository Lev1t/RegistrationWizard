// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistrationWizard.Server.Infrastructure;

#nullable disable

namespace RegistrationWizard.Server.Infrastructure.Migrations;

[DbContext(typeof(IdentityDbContext))]
[Migration("20241112130237_init")]
partial class init
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

        modelBuilder.Entity("RegistrationWizard.Server.Domain.Models.Country", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.ToTable("Countries");

                b.HasData(
                    new
                    {
                        Id = 1,
                        Name = "Australia"
                    },
                    new
                    {
                        Id = 2,
                        Name = "Brasilia"
                    },
                    new
                    {
                        Id = 3,
                        Name = "Mexico"
                    });
            });

        modelBuilder.Entity("RegistrationWizard.Server.Domain.Models.Province", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<int>("CountryId")
                    .HasColumnType("INTEGER");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.HasKey("Id");

                b.HasIndex("CountryId");

                b.ToTable("Provinces");

                b.HasData(
                    new
                    {
                        Id = 1,
                        CountryId = 1,
                        Name = "Province 1"
                    },
                    new
                    {
                        Id = 2,
                        CountryId = 1,
                        Name = "Province 2"
                    },
                    new
                    {
                        Id = 3,
                        CountryId = 2,
                        Name = "Province 3"
                    },
                    new
                    {
                        Id = 4,
                        CountryId = 2,
                        Name = "Province 4"
                    },
                    new
                    {
                        Id = 5,
                        CountryId = 3,
                        Name = "Province 5"
                    },
                    new
                    {
                        Id = 6,
                        CountryId = 3,
                        Name = "Province 6"
                    });
            });

        modelBuilder.Entity("RegistrationWizard.Server.Domain.Models.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<int>("CountryId")
                    .HasColumnType("INTEGER");

                b.Property<bool>("IsAgreeToWorkForFood")
                    .HasColumnType("INTEGER");

                b.Property<int>("ProvinceId")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.HasIndex("CountryId");

                b.HasIndex("ProvinceId");

                b.ToTable("Users");
            });

        modelBuilder.Entity("RegistrationWizard.Server.Domain.Models.UserLogin", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("INTEGER");

                b.Property<string>("Login")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.Property<string>("PasswordHash")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.Property<string>("PasswordSalt")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("TEXT");

                b.Property<int>("UserId")
                    .HasColumnType("INTEGER");

                b.HasKey("Id");

                b.HasIndex("Login")
                    .IsUnique();

                b.HasIndex("UserId")
                    .IsUnique();

                b.ToTable("UserLogins");
            });

        modelBuilder.Entity("RegistrationWizard.Server.Domain.Models.Province", b =>
            {
                b.HasOne("RegistrationWizard.Server.Domain.Models.Country", "Country")
                    .WithMany("Provinces")
                    .HasForeignKey("CountryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Country");
            });

        modelBuilder.Entity("RegistrationWizard.Server.Domain.Models.User", b =>
            {
                b.HasOne("RegistrationWizard.Server.Domain.Models.Country", "Country")
                    .WithMany()
                    .HasForeignKey("CountryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("RegistrationWizard.Server.Domain.Models.Province", "Province")
                    .WithMany()
                    .HasForeignKey("ProvinceId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Country");

                b.Navigation("Province");
            });

        modelBuilder.Entity("RegistrationWizard.Server.Domain.Models.UserLogin", b =>
            {
                b.HasOne("RegistrationWizard.Server.Domain.Models.User", "User")
                    .WithOne("UserLogin")
                    .HasForeignKey("RegistrationWizard.Server.Domain.Models.UserLogin", "UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("User");
            });

        modelBuilder.Entity("RegistrationWizard.Server.Domain.Models.Country", b =>
            {
                b.Navigation("Provinces");
            });

        modelBuilder.Entity("RegistrationWizard.Server.Domain.Models.User", b =>
            {
                b.Navigation("UserLogin")
                    .IsRequired();
            });
#pragma warning restore 612, 618
    }
}
